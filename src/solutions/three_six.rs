pub fn is_valid_sudoku(board: Vec<Vec<char>>) -> bool {
    let mut v_i = vec![vec![false;9];9];
    let mut v_s = vec![vec![false;9];9];
    for i in 0..9 {
        let mut v_j = vec![false;9];
        for j in 0..9 {
            if let Some(n) = board[i][j].to_digit(10) {
                let n_1 = n as usize - 1;
                if v_j[n_1] {
                    return false;
                }
                v_j[n_1] = true;
                if v_i[j][n_1] {
                    return false;
                }
                v_i[j][n_1] = true;
                let m = i / 3 * 3 + j / 3;
                if v_s[m][n_1] {
                    return false;
                }
                v_s[m][n_1] = true;
            }
        }
    }
    true
}

#[test]
pub fn test_is_valid_sudoku() {
    println!("{}", 4 / 3);
    let b: Vec<Vec<char>> = vec![
        vec!['5','3','.','.','7','.','.','.','.'],
        vec!['6','.','.','1','9','5','.','.','.'],
        vec!['.','9','8','.','.','.','.','6','.'],
        vec!['8','.','.','.','6','.','.','.','3'],
        vec!['4','.','.','8','.','3','.','.','1'],
        vec!['7','.','.','.','2','.','.','.','6'],
        vec!['.','6','.','.','.','.','2','8','.'],
        vec!['.','.','.','4','1','9','.','.','5'],
        vec!['.','.','.','.','8','.','.','7','9']
    ];
    assert_eq!(true, is_valid_sudoku(b));

    let b2: Vec<Vec<char>> = vec![
        vec!['8','3','.','.','7','.','.','.','.'],
        vec!['6','.','.','1','9','5','.','.','.'],
        vec!['.','9','8','.','.','.','.','6','.'],
        vec!['8','.','.','.','6','.','.','.','3'],
        vec!['4','.','.','8','.','3','.','.','1'],
        vec!['7','.','.','.','2','.','.','.','6'],
        vec!['.','6','.','.','.','.','2','8','.'],
        vec!['.','.','.','4','1','9','.','.','5'],
        vec!['.','.','.','.','8','.','.','7','9']
    ];
    assert_eq!(false, is_valid_sudoku(b2));

    let b3: Vec<Vec<char>> = vec![
        vec!['5','3','.','.','7','.','.','.','.'],
        vec!['6','.','3','1','9','5','.','.','.'],
        vec!['.','9','8','.','.','.','.','6','.'],
        vec!['8','.','.','.','6','.','.','.','3'],
        vec!['4','.','.','8','.','3','.','.','1'],
        vec!['7','.','.','.','2','.','.','.','6'],
        vec!['.','6','.','.','.','.','2','8','.'],
        vec!['.','.','.','4','1','9','.','.','5'],
        vec!['.','.','.','.','8','.','.','7','9']
    ];
    assert_eq!(false, is_valid_sudoku(b3));
}